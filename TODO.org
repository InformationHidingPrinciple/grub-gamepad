* TODO Useful links from chat

  #+BEGIN_SRC org
    2019-06-18 16:19:46.355591809|lorymaster|Could also add this in the todo: https://tools.ietf.org/html/rfc6970 RFC for universal plug and play protocol
    2019-06-18 18:42:37.673204119|x33grawl|whoops this one https://stackoverflow.com/questions/31799336/how-to-build-grub2-bootloader-from-its-source-and-test-it-with-qemu-emulator
    2019-06-18 19:16:41.155079973|joshuagollaher|this says that it only happens on 32 bit https://lists.gnu.org/archive/html/help-grub/2013-11/msg00006.html
    2019-06-18 19:33:59.211878178|wtfblub|theres a patch for this error http://git.savannah.gnu.org/cgit/grub.git/commit/util?id=842c390469e2c2e10b5aa36700324cd3bde25875
  #+END_SRC

* TODO Roadmap

  - [X] Development Setup
    - [X] Mirror in Tsoding organization
      - [X] [[https://help.github.com/en/articles/about-github-mirrors][About GitHub mirrors - GitHub Help]]
        - [X] [[https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks][Git - Git Hooks]]
          - [X] Wrong way
      - [X] Create separate repo with submodule
        - [X] [[https://github.com/tsoding/grub-gamepad][GitHub - tsoding/grub-gamepad: On going effort to bring gamepad/joystick supp...]]
    - [X] Emulation
      - [X] qemu
        - [X] Actually the recommended way to test grub
      - [X] VirtualBox
        - [X] To heavy
    - [X] Build
      - [X] git clone git://git.savannah.gnu.org/grub.git
        - [X] INSTALL file
          - [X] The instructions mention some kind of grub-emu. What is that?
            - [X] [[http://www.ubuntubuzz.com/2015/06/how-to-preview-grub-bootloader-changes.html][How To Preview GRUB Bootloader Changes Without Restart with grub-emu]]
              - [X] I don't have it in NixOS. Can I build it from the source code?
                - [X] No, grub-emu is a hoax.
        - [X] [[https://stackoverflow.com/questions/31799336/how-to-build-grub2-bootloader-from-its-source-and-test-it-with-qemu-emulator][how to build grub2 bootloader from it's source and test it with qemu emulator...]]
          - [X] You have to use grub-mkrescue instead
            #+BEGIN_SRC bash
              grub-mkrescue -o test.iso
              qemu-system-i386 -cdrom test.iso
            #+END_SRC
  - [X] Is there any way to debug output grub instead of messing with hooking up with GBD?
    - [X] grub_dprintf looks like a logging system (with topic and shit)
      - [X] How to read GRUB logs?
        - [X] [[https://stackoverflow.com/questions/34938067/reading-grub2-debug-logs][grub - Reading GRUB2 debug logs - Stack Overflow]]
          - [X] Try to add `set pager=1` and `set debug=all` to the config
            - [X] It worked, it printed a lot of shite
            - [X] Can we add our own log entry?
              - [X] Yep
  - [-] Forward a usb device to GRUB
    - [-] qemu-system-i386 -usb -device usb-host,hostbus=2,hostaddr=94 -cdrom test.iso
      - Bus 002 Device 094: ID 0853:0100 Topre Corporation HHKB Professional
      - Bus 002 Device 098: ID 046d:c218 Logitech, Inc. F510 Gamepad [DirectInput Mode]
      - [-] `lspci` shows the there is 'USB controller', but nothing on `usb`
        - [-] let's try to see what it prints without any usb forward
          - yep, there is no USB controller
          - [-] what if we just enable `-usb`
            - USB controller is present
            - [-] What if we have to enable USB support in GRUB explicitly
              - [-] It has something to do with loading appropriate GRUB modules
                - [[https://linuxaleph.blogspot.com/2012/06/grub2-usb-keyboard-not-working.html][Linux Aleph: grub2 usb keyboard not working]]
                - [-] [[https://blog.fpmurphy.com/2010/06/grub2-modules.html][GRUB2 Modules Â« Musings]]
                  - [-] grub> insmod usb_keyboard
                    - [-] Doesn't work even with forwarding
                      - [X] What is I have to do that during the initialization in the grub.cfg
                        - [X] I inserted insmod-s into grub.cfg and it didn't help
                          - [X] Logging level is set after loading the levels
                            - [X] I put `set debug` to the top and it didn't do anything
                      - [-] How do I know that usb_keyboard module even initalized
                        - [-] Can we like insert some khooy logging into usb_keyboard?
                          - [-] file:./grub/grub-core/term/usb_keyboard.c::445
                            - [-] There are no valid USB devices as far as GRUB is concerned
                              - [-] How `grub_usb_devs` are initialized?
                                - [-] it's part of usb module
                                  - [-] file:./grub/grub-core/Makefile.core.def::530
                                    - [ ] bus/usb/usb.c
                                      - [ ] grub_usb_device_initialize file:./grub/grub-core/bus/usb/usb.c::113
                                    - [ ] bus/usb/usbtrans.c
                                    - [ ] bus/usb/usbhub.c
                                    - [-] Where usb module is initialized?
                                      - [-] file:./grub/grub-core/bus/usb/usb.c::331
                                        - [ ] What is grub_term_poll_usb
                                        - [-] What does grub_usb_poll_devices do?
                                          - [X] Is it even called?
                                            - [X] Yep, after `insmod usb` it's constantly called (too poll usb device I suppose)
                                          - [-] It checks the hubs, but thare none
                                            - file:./grub/grub-core/bus/usb/usbhub.c::668
                                            - [ ] QEMU emulate usb hub?
                                              - [ ] there is device driver `usb-hub`
                                                - [ ] 
                                            - [X] How the hubs variable is initialized?
                                              - [X] grub_usb_controller_dev_register_iter
                                                - [X] file:./grub/grub-core/bus/usb/usbhub.c::244
                                                  - [X] ehci deriver registers usb_controller file:./grub/grub-core/bus/usb/ehci.c::2002
                                                    - [X] grub_usb_controller_dev_register file:./grub/grub-core/bus/usb/usbhub.c::300
                                                      - [X] grub_usb_controller_dev_register_iter file:./grub/grub-core/bus/usb/usbhub.c::258
                                                        - [X] ehci -> usb -> usb_keyboard?
                                                          - [X] Is EHCI module even initialized? file:./grub/grub-core/bus/usb/ehci.c::2002
                                                            - [X] Yep, when I do `insmod ehci` (but not sure if during the boot)
                                                          - [X] `disk hd96 not found` after `insmod ehci` on `usb` command
                                                            - [X] When you load ehci it opens and closes hd96 several times
                                                              - [X] https://lists.gnu.org/archive/html/help-grub/2015-01/msg00015.html
                                                                - [X] Some kind of bug or whatever. Don't even care
  - [-] See how GRUB 2 handles keyboard
    - [X] Gameport Exploration
      - [X] file:./grub/grub-core/commands/lspci.c::79
        - [X] What is Gameport Controller
          - [X] [[https://www.ebay.com/itm/USB-to-Joystick-15-Pin-Male-Gameport-Adapter-Converter-Adaptor-With-6ft-Cable/251010052320?epid=1943412725&hash=item3a715d70e0:g:mqEAAOSwYHxWOI1M][USB to Joystick 15 Pin Male Gameport Adapter Converter Adaptor With 6ft Cable...]]
            - [X] The VGA looking thing
          - [X] MIDI gameport
            - [X] [[https://en.wikipedia.org/wiki/Game_port][Game port - Wikipedia]]
    - [ ] Some boring keyboard layout stuff
      - [ ] file:./grub/include/grub/keyboard_layouts.h::36
        - [ ] enum grub_keyboard_key looks like a GRUB abstraction layer over keyboards
          - [ ] file:./grub/util/grub-mklayout.c::215
            - [ ] grub-mklayout
    - [ ] How I can type anything in the GRUB if I don't have any USB devices (according to `usb`)
      - [ ] 
    - [-] Some kind of fake input that constantly produces some actions
      - [ ] file:./grub/grub-core/tests/fake_input.c::1
      - [ ] Anaboth: @Tsoding search for the interrupt handler, sometimes it can be easier to understand
        - [ ] grub_gdb_idtinit
          - [ ] file:/home/streamer/Programming/tsoding/grub-gamepad/grub/grub-core/gdb/i386/idt.c::47
            - [ ] Not sure if this is the right direction
      - [-] file:/home/streamer/Programming/tsoding/grub-gamepad/grub/grub-core/Makefile.core.def::1912
        - [X] Do we have any other keyboard stuff there?
          - [X] There something called `sendkey` file:./grub/grub-core/Makefile.core.def::1899
            - [X] file:./grub/grub-core/commands/i386/pc/sendkey.c::1
              - [X] keysym_table
                - [X] sendkey is actually about emulating key strokes via GRUB commands
          - [X] at_keyboard has nothing to do with keys we receive
        - [ ] 
    - [-] How actual USB Keyboard Support works
      - [-] file:./grub/grub-core/term/usb_keyboard.c::1
        - [-] `grub_usb_keyboard_getkey`
          - [-] it's actually a method of `struct grub_term_input`
            - [-] Definition of `struct grub_term_input` file:./grub/include/grub/term.h::137
              - [ ] The terminals form a LinkedList
                - [ ] What's up with `struct grub_term_input **prev;` Why is it a double pointer?
              - [-] How many terms do we have?
                - [-] file:./grub/grub-core/kern/term.c::87
                  - [-] `grub_getkey_noblock`
                    - [-] FOR_ACTIVE_TERM_INPUTS
                      - [-] file:./grub/include/grub/term.h::321
                        - [X] FOR_LIST_ELEMENTS
                          - file:./grub/include/grub/list.h::37
                          - It is used to iterate LinkedLists
                          - [X] Is that X macro?
                            - [X] No
                        - [-] `grub_term_inputs`
                          - [-] This is probably the global list of terminals
                            - [-] file:./grub/include/grub/term.h::241
                              - [X] EXPORT_VAR
                                - file:./grub/include/grub/symbol.h::69
                                - [X] file:./grub/grub-core/Makefile.am::298
                                  - This looks like external preprocessing
                                  - [X] ASM_PREFIX
                                    - [X] file:./grub/grub-core/Makefile.am::286
                                      - [X] Looks like a deadend.
                                - It's probably very important. But we can simply ignore it
                              - [-] Where grub_term_inputs are initialized
                                - [-] fake_input file:./grub/grub-core/tests/fake_input.c::56
                                  - [-] usb_keyboard.c and fake_input.c are implementations of the same interface
                                    - [X] grub_usb_keyboard_attach looks interesting
                                      - [X] file:./grub/grub-core/term/usb_keyboard.c::147
                                        - [X] grub_usb_device_t
                                          - [X] It was a spoiler
                                    - [X] What is the interface
                                      - [X] Look at the headers they include. They probably include the interface
                                        - [X] #include <grub/term.h>
                                          - [X] There is also gfxterm.h
                                            - [X] file:./grub/include/grub/gfxterm.h::1
                                              - [X] I don't think it's important right now
                                          - [X] file:./grub/include/grub/term.h::1
                                            - [X] And we already been here
                                    - [-] They all initialize their own instance of grub_term_input
                                      - [-] How those instances are assembled into a linked list later?
                                        - [-] Do usb_keyboard and fake_input mention grub_term_inputs
                                          - [X] usb_keyboard does not
                                          - [X] fake_input
                                            - [X] file:./grub/grub-core/tests/fake_input.c::56
                                          - [ ] grub_term_register_input_active
                                            - [ ] file:./grub/include/grub/term.h::267
                                              - [ ] And it mentions grub_term_inputs
                                                - [ ] Let's go up the callstack
                                                  - [ ] file:./grub/grub-core/term/usb_keyboard.c::147
                                                    - [ ] grub_usb_keyboard_attach
                                                      - [ ] file:./grub/grub-core/term/usb_keyboard.c::442
                                                        - [ ] struct grub_usb_attach_desc
                                                          - [ ] file:./grub/include/grub/usb.h::297
                                - [ ] 
  - [ ] Try to debug GRUB2 with gdb and see how it boots itself up
  - [ ] Find the way to receive stuff from gamepad
    - [ ] Dig down through abstractions
      - [ ] SDL2
        - [ ] X11
          - [ ] Linux Input
            - [ ] Driver
              - [ ] ...
  - [ ] it might make sense to try get some input working from the gamepad in Linux first, rather than in grub 
  - [ ] USB vs HID
    - [ ] https://en.wikipedia.org/wiki/USB_human_interface_device_class
    - [ ] https://usb.org/sites/default/files/documents/hid1_11.pdf

      
